openapi: 3.0.0
info:
  title: API Documentation
  version: 1.0.0
paths:
  /auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                password:
                  type: string
                email:
                  type: string
                image:
                  type: string
                description:
                  type: string
                phoneNumber:
                  type: number
      responses:
        '200':
          description: User registered successfully
        '400':
          description: Bad request
  /auth/login:
    post:
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
               
      responses:
        '200':
          description: User logged in successfully
        '401':
          description: Unauthorized
  /auth/profile/{id}:
    put:
      summary: Update user profile
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                image:
                  type: string
                description:
                  type: string
                phoneNumber:
                  type: number

      responses:
        '200':
          description: User profile updated successfully
        '404':
          description: User not found
  /auth/delete/{id}:
    delete:
      summary: Delete a user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User deleted successfully
        '404':
          description: User not found
  /auth/logout:
    post:
      summary: Logout a user
      responses:
        '200':
          description: User logged out successfully
  /auth/forgot:
    post:
      summary: Forgot password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Password reset link sent
  /auth/reset:
    post:
      summary: Reset password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
      responses:
        '200':
          description: Password reset successfully
  /auth/users:
    get:
      summary: Get all users
      responses:
        '200':
          description: List of users
  /auth/user/{id}:
    get:
      summary: Get single user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User details
        '404':
          description: User not found
  /auth/current:
    get:
      summary: Get current authenticated user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Current user details
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
